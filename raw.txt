#include<bits/stdc++.h>
#define lld             long long int
#define llf             long double
#define pb              push_back
#define mp              make_pair
#define in              insert
#define loopN(n)        for(lld i=0;i<n;i++)
#define loopN2(n)       for(lld j=0;j<n;j++)
#define loop(p,n)       for(lld i=p;i<=n;i++)
#define rloop(p,n)      for(lld i=n;i>=p;i--)
#define loop2(p,n)      for(lld j=p;j<=n;j++)
#define looop(p,n,i)    for(lld i=p;i<=n;i++)
#define rlooop(p,n,i)   for(lld i=n;i>=p;i--)
#define iloop(it,m)     for(it=m.begin();it!=m.end();it++)
#define all(v)          v.begin(),v.end()
#define ff              first
#define ss              second
#define INF             2e18
#define FILE            freopen("input.txt","r",stdin);freopen("output.txt","w",stdout)
#define pi              (2*acos(0.0))
#define mod             (1e9+7)
#define ISO             ios::sync_with_stdio(false);cin.tie(0)
#define mem(a,b)        memset(a,b,sizeof(a))
#define case(z)         cout<<"Case "<<z<<": "
#define setprec(a)      fixed<< setprecision(a)
#define pii	            pair<lld,lld>
#define retdp(a)        if(a!=-1)return a
//_______________________________________________
#define on(m,p)         (m|(1<<p))
#define ison(m,p)       ((bool)(m&(1<<p)))
#define flip(m,p)       (m^(1<<p))
#define allon(p)        ((1<<p)-1)
//_______________________________________________
using namespace std;

/*
fstream fin;
    fin.open ("mytext.txt");

map< , > :: iterator it


*/
lld fx[]= {1,0,-1, 0,1, 1,-1,-1};
lld fy[]= {0,1,0,-1,1,-1,1,-1};
//_______________________________________________
lld  MOD=1000000007;

lld fact(lld n)
{
    if(n==0)
    {
        return 1;
    }
    if(n==1)
    {
        return 1;
    }
    else
    {
        return ((n%MOD)*fact(n-1))%MOD;
    }


}
lld modpow(lld x, lld n, lld m)
{
    if (n == 0)
        return 1%m;
    lld u = modpow(x,n/2,m);
    u = (u*u)%m;
    if (n%2 == 1)
        u = (u*x)%m;
    return u;
}

lld nCr(lld n,lld r)
{
    lld a=fact(n);
    lld b = fact(n-r);
    lld c = fact(r);
    b=modpow(b,MOD-2,MOD);
    c=modpow(c,MOD-2,MOD);
    return ((a%MOD)*((b*c)%MOD))%MOD;

}
//__________________________________________________


//__________________________________________________




void slv()
{

}

int main()
{
    ISO;
    lld idx=1;
    //lld t;cin>>t;while(t--)
    {
        //case(idx++);
        slv();
    }
    return 0;
}
