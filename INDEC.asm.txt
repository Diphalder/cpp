INDEC PROC 
;READ NUMBER IN RANGE -32768 TO 32767 
;input :none 
;output :AX =binary equivalent of number 
 PUSH BX 
 PUSH CX 
 PUSH DX 
;print prompt 
@BEGIN:  
 XOR BX,BX ;BX hold total 
;negative =false 
 XOR CX,CX ;CX hold sign 
;read char. 
 MOV AH,1 
 INT 21H 
;case char. of 
 CMP AL,'-' ;minus sign 
 JE @MINUS ;yes,set sign 
 CMP AL,'+' ;plus sign 
 JE @PLUS ;yes,get another char.
 JMP @REPEAT2 ;start processing char. 
@MINUS: MOV CX,1 

@PLUS: INT 21H 
;end case 
@REPEAT2: 
;if char. is between '0' and '9' 
 CMP AL,'0' ;char >='0'? 
 JNGE @NOT_DIGIT ;illegal char. 
 CMP AL,'9' ;char<='9' ? 
 JNLE @NOT_DIGIT 
;then convert char to digit 
 AND AX,000FH 
 PUSH AX 
;total =total *10 +digit 
 MOV AX,10 
 MUL BX 
;---------------------------- 
CMP DX,0 
JNE @NOT_DIGIT 
;-------------------------- 
 POP BX 
 ADD BX,AX 
;------------------------- 
JC @NOT_DIGIT 
;-------------------- 
;read char 
 MOV AH,1 
 INT 21H 
 CMP AL,0DH ;CR 
 JNE @REPEAT2 
;until CR 
 MOV AX,BX 
;if negative 
 OR CX,CX 

JE @EXIT
 NEG AX 
;end if 
@EXIT: POP DX 
 POP CX 
 POP BX 
 RET 
;here if illegal char entered 
@NOT_DIGIT: 
 MOV AH,2 
 MOV DL,0DH 
 INT 21H 
 MOV DL,0AH 
 INT 21H 
 JMP @BEGIN 
INDEC ENDP 
